version: 2.1
orbs:
  advanced-checkout: vsco/advanced-checkout@1.0.0
workflows:
  ansible-ndfc-gates:
    jobs:
      - clone-repo
      - check-branch-changes
      - build-collection:
          requires:
            - clone-repo
      - sanity-test:
          requires:
            - build-collection
          filters:
            branches:
              ignore:
                - main
                - develop
                - release-branch
      - full-regresion-test:
          requires:
            - build-collection
            - check-branch-changes
          filters:
            branches:
             only:
               - release-branch
      - deploy-on-galaxy:
          filters:
            tags:
              only: /^2.*/
            branches:
              ignore: /.*/

jobs:

  clone-repo:
    machine: true
    resource_class: en-hackathon/ndfc_resource
    environment:
      PROJECT_HOME: /home/circleci/project
      PROJECT_GIT_REPO: https://github.com/en-hackathon/ansible-dcnm.git
    # This was needed because the next step does an rm but several write protected files
    # under /home/circleci/project from previous git clone
    # For this to work properly I did two things
    # 1) Added ssh key in .ssh and on github - this was likely not needed since I am using https
    # 2) Removed url.ssh://git@github.com.insteadof=https://github.com in git config
    steps:
      - run:
          command: |
            rm -rf $PROJECT_HOME
            mkdir -p $PROJECT_HOME
            git clone --branch $CIRCLE_BRANCH $PROJECT_GIT_REPO $PROJECT_HOME
  
  check-branch-changes:
    machine: true
    resource_class: en-hackathon/ndfc_resource
    environment:
      PROJECT_HOME: /home/circleci/project
      CHECK_BRANCH_CHG_SCRIPT: /home/circleci/en-hackathon/check_branches.py
      PROJECT_VIRTUAL_ENV: /home/circleci/.pyenv/bin/pyenv local en-hackathon
    steps:
      - run:
          command: |
            $PROJECT_VIRTUAL_ENV
            cd $PROJECT_HOME
            cp $CHECK_BRANCH_CHG_SCRIPT .
            python check_branches.py
            echo $?

  build-collection:
    machine: true
    resource_class: en-hackathon/ndfc_resource
    environment:
      PROJECT_HOME: /home/circleci/project
      PROJECT_VIRTUAL_ENV: /home/circleci/.pyenv/bin/pyenv local en-hackathon
      GALAXY_COMMAND: /home/circleci/.pyenv/shims/ansible-galaxy
      CLEANUP_DIR: /home/circleci/.ansible/collections/ansible_collections/mikewiebe
    steps:
      # - advanced-checkout/shallow-checkout:
      #     fetch_lfs: true
      #     fetch_submodules: true
      - run:
          command: |
            $PROJECT_VIRTUAL_ENV
            $GALAXY_COMMAND collection list
            cd $PROJECT_HOME
            $GALAXY_COMMAND collection build
            $GALAXY_COMMAND collection install --force ./mikewiebe*
            $GALAXY_COMMAND collection list
  
  sanity-test:
    machine: true
    resource_class: en-hackathon/ndfc_resource
    environment:
      PROJECT_HOME: /home/circleci/project
      PROJECT_VIRTUAL_ENV: /home/circleci/.pyenv/bin/pyenv local en-hackathon
      GALAXY_COMMAND: /home/circleci/.pyenv/shims/ansible-galaxy
      ANSIBLE_BASE: /home/circleci/en-hackathon
      ANSIBLE_COMMAND: /home/circleci/.pyenv/shims/ansible
      ANSIBLE_PLAYBOOK_COMMAND: /home/circleci/.pyenv/shims/ansible-playbook
    steps:
      - run:
          command: |
            # Enable Python Virtual Environment
            $PROJECT_VIRTUAL_ENV

            # Display Ansible Version
            $ANSIBLE_COMMAND --version

            # Run Ansible Sanity Test
            cd $ANSIBLE_BASE
            source source_env
            $ANSIBLE_PLAYBOOK_COMMAND -i ndfc_inventory.yml ndfc_tests.yml -v

  full-regresion-test:
    machine: true
    resource_class: en-hackathon/ndfc_resource
    environment:
      PROJECT_HOME: /home/circleci/project
      PROJECT_VIRTUAL_ENV: /home/circleci/.pyenv/bin/pyenv local en-hackathon
      GALAXY_COMMAND: /home/circleci/.pyenv/shims/ansible-galaxy
      ANSIBLE_BASE: /home/circleci/en-hackathon
      ANSIBLE_COMMAND: /home/circleci/.pyenv/shims/ansible
      ANSIBLE_PLAYBOOK_COMMAND: /home/circleci/.pyenv/shims/ansible-playbook
    steps:
      - run:
          command: |
            # Enable Python Virtual Environment
            $PROJECT_VIRTUAL_ENV

            # Display Ansible Version
            $ANSIBLE_COMMAND --version

            # Run Ansible Sanity Test
            cd $ANSIBLE_BASE
            source source_env
            $ANSIBLE_PLAYBOOK_COMMAND -i ndfc_inventory.yml ndfc_tests.yml -v

  deploy-on-galaxy:
    machine: true
    resource_class: en-hackathon/ndfc_resource
    environment:
      PROJECT_HOME: /home/circleci/project
      PROJECT_GIT_REPO: https://github.com/en-hackathon/ansible-dcnm.git
      PROJECT_VIRTUAL_ENV: /home/circleci/.pyenv/bin/pyenv local en-hackathon
      GALAXY_COMMAND: /home/circleci/.pyenv/shims/ansible-galaxy
      CLEANUP_DIR: /home/circleci/.ansible/collections/ansible_collections/mikewiebe
      ANSIBLE_BASE: /home/circleci/en-hackathon
      ANSIBLE_COMMAND: /home/circleci/.pyenv/shims/ansible
      ANSIBLE_PLAYBOOK_COMMAND: /home/circleci/.pyenv/shims/ansible-playbook
    steps:
      - run:
          command: |
            # This was needed because the next step does an rm but several write protected files
            # under /home/circleci/project from previous git clone
            rm -rf $PROJECT_HOME
            git clone $PROJECT_GIT_REPO $PROJECT_HOME
            cd $PROJECT_HOME
            git status .
            git checkout $CIRCLE_TAG
            git status .
            $PROJECT_VIRTUAL_ENV
            $GALAXY_COMMAND collection list
            rm -rf $CLEANUP_DIR
            sleep 10
            $GALAXY_COMMAND collection list
            cd $PROJECT_HOME
            $GALAXY_COMMAND collection build
            $GALAXY_COMMAND collection install ./mikewiebe*
            $GALAXY_COMMAND collection list
            $GALAXY_COMMAND collection publish ./mikewiebe-test_ci_publish-${CIRCLE_TAG}.tar.gz --token=$ANSIBLE_GALAXY_TOKEN
